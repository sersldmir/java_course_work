package com.example.demo;

import java.util.List;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;

/** Это интерфейс, определяющий репозиторий для сущности «Поставщик». Он расширяет интерфейс
* `JpaRepository`, который обеспечивает основные операции CRUD для сущности. Каждый метод помечен аннотацией `@Query`,
// которая указывает пользовательский SQL-запрос для выполнения.
*/
public interface SupplierRepository extends JpaRepository<Supplier, Long>{

    /**
     * Это функция, которая ищет поставщиков по ключевому слову, совпадающему с их именем, номером
     * телефона или адресом электронной почты.
     * 
     * @param keyword Параметр ключевого слова — это строка, которая используется для поиска поставщиков по
     * их имени, номеру телефона или адресу электронной почты. Поиск выполняется с помощью SQL-запроса,
     * который ищет поставщиков, чье имя, номер телефона или адрес электронной почты пост содержат ключевое
     * слово. Синтаксис %?1% используется для обозначения  передаваемого ключевого слова
     * 
     * @return Список объектов Supplier, соответствующих критериям поиска, указанным в запросе. Поиск
     * выполняется на основе имени, номера телефона и адреса электронной почты поставщиков, а параметр
     * ключевого слова используется для фильтрации результатов.
     */
    @Query("SELECT s from Supplier s WHERE CONCAT(s.name, ' ', s.phone, ' ', s.email) LIKE %?1%")
    List<Supplier> search(String keyword);

    /**
     * Эта функция ищет поставщика по его идентификатору с помощью ключевого слова.
     * 
     * @param keyword Параметр ключевого слова представляет собой строку, представляющую поисковый запрос,
     * используемый для поиска поставщиков по их идентификатору. Запрос ищет поставщиков, у которых supid
     * (идентификатор поставщика) соответствует указанному ключевому слову.
     * @return Метод searchById возвращает список объектов Supplier, соответствующих критериям поиска,
     * указанным в запросе. Поиск основан на атрибуте `suid` сущности `Supplier`, а ключевое слово поиска
     * передается методу в качестве параметра.
     */
    @Query("SELECT s from Supplier s WHERE s.supid LIKE ?1")
    List<Supplier> searchById(String keyword);

    /**
     * Эта функция ищет поставщиков, имя которых содержит заданное ключевое слово.
     * 
     * @param keyword Параметр ключевого слова — это строка, представляющая условие поиска, используемое
     * для поиска поставщиков по имени. Запрос ищет поставщиков, чье имя содержит ключевое слово, используя
     * оператор LIKE с подстановочным знаком (%) до и после ключевого слова.
     * @return Список объектов Supplier, имя которых содержит указанное ключевое слово.
     */
    @Query("SELECT s from Supplier s WHERE s.name LIKE %?1%")
    List<Supplier> searchByName(String keyword);

    /**
     * Эта функция ищет поставщиков, номер телефона которых содержит заданное ключевое слово.
     * 
     * @param keyword Параметр ключевого слова — это строка, представляющая номер телефона или часть номера
     * телефона, которую мы хотим найти в базе данных. Запрос вернет список объектов поставщиков, номер
     * телефона которых соответствует заданному ключевому слову. Символ % — это подстановочный знак,
     * который позволяет нам искать телефонные номера,
     * @return Список объектов Supplier, которые соответствуют критериям поиска наличия номера телефона,
     * содержащего указанное ключевое слово.
     */
    @Query("SELECT s from Supplier s WHERE s.phone LIKE %?1%")
    List<Supplier> searchByPhone(String keyword);

    /**
     * Эта функция ищет поставщиков, электронная почта которых содержит определенное ключевое слово.
     * 
     * @param keyword Параметр «ключевое слово» — это строка, представляющая адрес электронной почты или
     * часть адреса электронной почты, которую мы хотим найти в таблице «Поставщик». Символ «%»
     * используется в качестве подстановочного знака для соответствия любым символам до или после ключевого
     * слова.
     * @return Список объектов Supplier, адрес электронной почты которых содержит указанное ключевое слово.
     */
    @Query("SELECT s from Supplier s WHERE s.email LIKE %?1%")
    List<Supplier> searchByEmail(String keyword);

    /**
     * Эта функция извлекает список всех поставщиков, кроме поставщика с указанным идентификатором.
     * 
     * @param supid Параметр «супид» представляет собой тип данных Long, представляющий идентификатор
     * поставщика, который должен быть исключен из списка всех поставщиков. Запрос выбирает всех
     * поставщиков, чей ID не равен заданному "suvid".
     * @return Список всех поставщиков, кроме одного с указанным ID.
     */
    @Query("SELECT s from Supplier s WHERE s.id != ?1")
    List<Supplier> listAllExceptChosen(Long supid);
}
